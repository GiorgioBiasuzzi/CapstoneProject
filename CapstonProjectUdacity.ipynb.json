{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import pandas_datareader.data as web\n",
    "import numpy as np\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib import rcParams\n",
    "\n",
    "#Data Collection#\n",
    "stocks = ['RBSPF']\n",
    "\n",
    "start = dt.datetime(2010, 1, 1)\n",
    "end = dt.datetime(2030, 1, 27)\n",
    "\n",
    "data = web.DataReader('RBSPF', 'yahoo', start, end)\n",
    "\n",
    "#Data pre-processing#\n",
    "\n",
    "dates =[]\n",
    "for x in range(len(data)):\n",
    "    '''Remove the level index caused by the multiple layers in the original dataset'''\n",
    "    newdate = str(data.index[x])\n",
    "    newdate = newdate[0:10]\n",
    "    dates.append(newdate)\n",
    "\n",
    "data['Dates'] = dates\n",
    "\n",
    "#nblevels = ticker.index.nlevels\n",
    "#print(nblevels)\n",
    "#ticker.reset_index()\n",
    "#pd.MultiIndex.droplevel(level=1)\n",
    "#ticker.droplevel('Date')\n",
    "#ticker.droplevel('Date', axis=1)\n",
    "#ticker.reset_index(level=1, drop=True)\n",
    "data.reset_index(drop=True, inplace=True)\n",
    "#ticker[\"DatesNew\"]= pd.to_datetime(ticker[\"Dates\"])\n",
    "#ticker.columns = ticker.columns.droplevel()\n",
    "display(data)\n",
    "\n",
    "#ticker = ticker['Adj Close']\n",
    "#display(ticker)\n",
    "#ticker.rename({'Date':'Date', '':'Adj Close'}, axis=1)\n",
    "#display(ticker)\n",
    "del data['Dates']\n",
    "display(data)\n",
    "\n",
    "#Scaling the features\n",
    "scaler = MinMaxScaler(feature_range=(0,1))\n",
    "#Transform the data into\n",
    "scaled_Data = scaler.fit_transform(data)\n",
    "data['Dates'] = dates\n",
    "df = pd.DataFrame(data=scaled_Data, index=[data.Dates], columns=['Open', 'High', 'Low', 'Close', 'Adj Close', 'Volume'])\n",
    "df['Dates'] = dates\n",
    "df.reset_index(drop=True, inplace=True)\n",
    "display(df)\n",
    "\n",
    "#Create a separate dataframe for Adj Close data and convert into an array\n",
    "#data = data.filter['Adj Close']\n",
    "dataset = data['Adj Close'].values\n",
    "# = Xdata.values\n",
    "\n",
    "#Train/Test split\n",
    "train = dataset[0:2196,:]\n",
    "valid = dataset[2196:,:]\n",
    "#_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)\n",
    "\n",
    "#Converting dataset into x_train and y_train\n",
    "x_train, y_train = [], []\n",
    "for i in range(60,len(train)):\n",
    "    x_train.append(scaled_Data[i-60:i,0])\n",
    "    y_train.append(scaled_Data[i,0])\n",
    "x_train, y_train = np.array(x_train), np.array(y_train)\n",
    "\n",
    "x_train = np.reshape(x_train, (x_train.shape[0],x_train.shape[1],1))\n",
    "\n",
    "#Create and fit the LSTM network"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
