{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Dates</th>\n",
       "      <th>Adj Close</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2010-01-04</td>\n",
       "      <td>0.426354</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2010-01-05</td>\n",
       "      <td>0.478560</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2010-01-06</td>\n",
       "      <td>0.513364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2010-01-07</td>\n",
       "      <td>0.513364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2010-01-08</td>\n",
       "      <td>0.478560</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2766</th>\n",
       "      <td>2020-12-29</td>\n",
       "      <td>2.220000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2767</th>\n",
       "      <td>2020-12-30</td>\n",
       "      <td>2.260000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2768</th>\n",
       "      <td>2020-12-31</td>\n",
       "      <td>2.290000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2769</th>\n",
       "      <td>2021-01-04</td>\n",
       "      <td>2.150000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2770</th>\n",
       "      <td>2021-01-05</td>\n",
       "      <td>2.137500</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2771 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          Dates  Adj Close\n",
       "0    2010-01-04   0.426354\n",
       "1    2010-01-05   0.478560\n",
       "2    2010-01-06   0.513364\n",
       "3    2010-01-07   0.513364\n",
       "4    2010-01-08   0.478560\n",
       "...         ...        ...\n",
       "2766 2020-12-29   2.220000\n",
       "2767 2020-12-30   2.260000\n",
       "2768 2020-12-31   2.290000\n",
       "2769 2021-01-04   2.150000\n",
       "2770 2021-01-05   2.137500\n",
       "\n",
       "[2771 rows x 2 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/giorgiobiasuzzi/opt/anaconda3/envs/MLEnvCapstone/lib/python3.7/site-packages/ipykernel_launcher.py:39: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "/Users/giorgiobiasuzzi/opt/anaconda3/envs/MLEnvCapstone/lib/python3.7/site-packages/ipykernel_launcher.py:40: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([[0.42635357],\n",
       "       [0.47856012],\n",
       "       [0.51336449],\n",
       "       ...,\n",
       "       [2.28999996],\n",
       "       [2.1500001 ],\n",
       "       [2.13750005]])"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(2771, 1)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([[0.42635357],\n",
       "       [0.47856012],\n",
       "       [0.51336449],\n",
       "       ...,\n",
       "       [2.80805421],\n",
       "       [3.00110793],\n",
       "       [2.90458083]])"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "array([[2.9221313 ],\n",
       "       [2.9221313 ],\n",
       "       [2.84315491],\n",
       "       [2.84315491],\n",
       "       [2.84315491],\n",
       "       [2.84315491],\n",
       "       [2.84315491],\n",
       "       [2.84315491],\n",
       "       [2.74662805],\n",
       "       [2.80805421],\n",
       "       [2.83437991],\n",
       "       [2.71152711],\n",
       "       [2.71152711],\n",
       "       [2.76417828],\n",
       "       [2.76417828],\n",
       "       [2.70275187],\n",
       "       [2.70275187],\n",
       "       [2.70275187],\n",
       "       [2.70275187],\n",
       "       [2.63255048],\n",
       "       [2.63255048],\n",
       "       [2.63255048],\n",
       "       [2.63255048],\n",
       "       [2.53602409],\n",
       "       [2.51847339],\n",
       "       [2.62377572],\n",
       "       [2.50969839],\n",
       "       [2.67642641],\n",
       "       [2.67642641],\n",
       "       [2.7203021 ],\n",
       "       [2.66765118],\n",
       "       [2.66765118],\n",
       "       [2.77295375],\n",
       "       [2.77295375],\n",
       "       [2.75540304],\n",
       "       [2.75540304],\n",
       "       [2.75540304],\n",
       "       [2.78172874],\n",
       "       [2.52724886],\n",
       "       [2.50969839],\n",
       "       [2.3692956 ],\n",
       "       [2.35174537],\n",
       "       [2.35174537],\n",
       "       [2.35174537],\n",
       "       [2.43949699],\n",
       "       [2.42194676],\n",
       "       [2.42194676],\n",
       "       [2.42194676],\n",
       "       [2.34297037],\n",
       "       [2.50092316],\n",
       "       [2.50092316],\n",
       "       [2.29909444],\n",
       "       [2.29909444],\n",
       "       [2.29909444],\n",
       "       [2.12359095],\n",
       "       [2.24644327],\n",
       "       [2.24644327],\n",
       "       [2.24644327],\n",
       "       [2.24644327],\n",
       "       [2.25521851],\n",
       "       [2.2288928 ],\n",
       "       [2.27276897],\n",
       "       [2.2288928 ],\n",
       "       [2.2288928 ],\n",
       "       [2.28154397],\n",
       "       [2.20256734],\n",
       "       [2.27276897],\n",
       "       [2.34297037],\n",
       "       [2.34297037],\n",
       "       [2.34297037],\n",
       "       [2.41317153],\n",
       "       [2.41317153],\n",
       "       [2.41317153],\n",
       "       [2.41317153],\n",
       "       [2.41317153],\n",
       "       [2.41317153],\n",
       "       [2.41317153],\n",
       "       [2.41317153],\n",
       "       [2.41317153],\n",
       "       [2.70275187],\n",
       "       [2.70275187],\n",
       "       [2.70275187],\n",
       "       [2.70275187],\n",
       "       [2.79927921],\n",
       "       [2.79927921],\n",
       "       [2.79927921],\n",
       "       [2.76417828],\n",
       "       [2.76417828],\n",
       "       [2.70275187],\n",
       "       [2.76417828],\n",
       "       [2.76417828],\n",
       "       [2.76417828],\n",
       "       [2.76417828],\n",
       "       [2.76417828],\n",
       "       [2.76417828],\n",
       "       [2.70275187],\n",
       "       [2.60622525],\n",
       "       [2.60622525],\n",
       "       [2.59745026],\n",
       "       [2.78172874],\n",
       "       [2.79050398],\n",
       "       [2.79050398],\n",
       "       [2.79050398],\n",
       "       [2.79050398],\n",
       "       [2.79050398],\n",
       "       [2.79050398],\n",
       "       [3.07130909],\n",
       "       [3.00110793],\n",
       "       [3.00110793],\n",
       "       [2.98355746],\n",
       "       [2.88703084],\n",
       "       [2.88703084],\n",
       "       [2.88703084],\n",
       "       [2.85193014],\n",
       "       [2.85193014],\n",
       "       [2.85193014],\n",
       "       [2.85193014],\n",
       "       [2.98355746],\n",
       "       [2.98355746],\n",
       "       [3.15028572],\n",
       "       [3.13273525],\n",
       "       [3.13273525],\n",
       "       [3.19996142],\n",
       "       [2.86831307],\n",
       "       [2.86831307],\n",
       "       [2.86831307],\n",
       "       [2.86831307],\n",
       "       [2.86831307],\n",
       "       [2.77867794],\n",
       "       [2.77867794],\n",
       "       [2.77867794],\n",
       "       [2.98483801],\n",
       "       [2.90416694],\n",
       "       [2.90416694],\n",
       "       [2.9400208 ],\n",
       "       [2.95794773],\n",
       "       [2.90416694],\n",
       "       [3.02965569],\n",
       "       [3.02965569],\n",
       "       [3.01172853],\n",
       "       [3.01172853],\n",
       "       [2.98483801],\n",
       "       [2.98483801],\n",
       "       [3.03861904],\n",
       "       [2.91313028],\n",
       "       [2.91313028],\n",
       "       [2.91313028],\n",
       "       [2.85038614],\n",
       "       [2.85038614],\n",
       "       [2.77867794],\n",
       "       [2.77867794],\n",
       "       [2.77867794],\n",
       "       [2.77867794],\n",
       "       [2.72489715],\n",
       "       [2.72489715],\n",
       "       [2.72489715],\n",
       "       [2.67111635],\n",
       "       [2.67111635],\n",
       "       [2.67111635],\n",
       "       [2.64422584],\n",
       "       [2.61733556],\n",
       "       [2.71593356],\n",
       "       [2.59940863],\n",
       "       [2.42910266],\n",
       "       [2.64422584],\n",
       "       [2.44702959],\n",
       "       [2.42013907],\n",
       "       [2.42013907],\n",
       "       [2.42013907],\n",
       "       [2.47391987],\n",
       "       [2.47391987],\n",
       "       [2.47391987],\n",
       "       [2.47391987],\n",
       "       [2.47391987],\n",
       "       [2.33050418],\n",
       "       [2.33050418],\n",
       "       [2.33050418],\n",
       "       [2.33050418],\n",
       "       [2.35739493],\n",
       "       [2.42013907],\n",
       "       [2.42013907],\n",
       "       [2.42013907],\n",
       "       [2.42013907],\n",
       "       [2.42013907],\n",
       "       [2.42013907],\n",
       "       [2.46495652],\n",
       "       [2.46495652],\n",
       "       [2.46495652],\n",
       "       [2.46495652],\n",
       "       [2.46495652],\n",
       "       [2.46495652],\n",
       "       [2.46495652],\n",
       "       [2.45599294],\n",
       "       [2.5814817 ],\n",
       "       [2.50977373],\n",
       "       [2.50977373],\n",
       "       [2.50977373],\n",
       "       [2.50977373],\n",
       "       [2.55459118],\n",
       "       [2.55459118],\n",
       "       [2.59940863],\n",
       "       [2.59940863],\n",
       "       [2.53666425],\n",
       "       [2.53666425],\n",
       "       [2.56355453],\n",
       "       [2.47391987],\n",
       "       [2.47391987],\n",
       "       [2.53666425],\n",
       "       [2.53666425],\n",
       "       [2.53666425],\n",
       "       [2.50977373],\n",
       "       [2.42013907],\n",
       "       [2.42013907],\n",
       "       [2.42013907],\n",
       "       [2.42013907],\n",
       "       [2.25879622],\n",
       "       [2.25879622],\n",
       "       [2.16916156],\n",
       "       [2.16916156],\n",
       "       [2.16916156],\n",
       "       [2.16916156],\n",
       "       [2.16916156],\n",
       "       [2.16916156],\n",
       "       [2.16916156],\n",
       "       [1.95224535],\n",
       "       [1.95224535],\n",
       "       [2.09371257],\n",
       "       [2.09371257],\n",
       "       [2.09371257],\n",
       "       [2.0276947 ],\n",
       "       [2.13143706],\n",
       "       [2.13143706],\n",
       "       [2.13143706],\n",
       "       [2.0276947 ],\n",
       "       [2.0276947 ],\n",
       "       [2.0276947 ],\n",
       "       [1.99940097],\n",
       "       [1.99940097],\n",
       "       [1.99940097],\n",
       "       [1.99940097],\n",
       "       [1.99940097],\n",
       "       [1.99940097],\n",
       "       [2.23517942],\n",
       "       [2.23517942],\n",
       "       [2.23517942],\n",
       "       [2.32005978],\n",
       "       [2.36721539],\n",
       "       [2.36721539],\n",
       "       [2.36721539],\n",
       "       [2.36721539],\n",
       "       [2.36721539],\n",
       "       [2.36721539],\n",
       "       [2.36721539],\n",
       "       [2.36721539],\n",
       "       [2.36721539],\n",
       "       [2.4332335 ],\n",
       "       [2.33892202],\n",
       "       [2.33892202],\n",
       "       [2.33892202],\n",
       "       [2.33892202],\n",
       "       [2.32005978],\n",
       "       [2.32005978],\n",
       "       [2.32005978],\n",
       "       [2.31062865],\n",
       "       [2.65958071],\n",
       "       [2.45209575],\n",
       "       [2.74446106],\n",
       "       [2.74446106],\n",
       "       [2.74446106],\n",
       "       [2.8010478 ],\n",
       "       [2.88592792],\n",
       "       [2.96137714],\n",
       "       [2.75389218],\n",
       "       [2.75389218],\n",
       "       [2.75389218],\n",
       "       [2.65958071],\n",
       "       [2.65958071],\n",
       "       [2.58413172],\n",
       "       [2.58413172],\n",
       "       [2.51811385],\n",
       "       [2.51811385],\n",
       "       [2.51811385],\n",
       "       [2.54640722],\n",
       "       [2.4992516 ],\n",
       "       [2.4992516 ],\n",
       "       [2.57470059],\n",
       "       [2.57470059],\n",
       "       [2.57470059],\n",
       "       [2.57470059],\n",
       "       [2.65958071],\n",
       "       [2.72559881],\n",
       "       [2.60299397],\n",
       "       [2.60299397],\n",
       "       [2.60299397],\n",
       "       [2.6973052 ],\n",
       "       [2.6973052 ],\n",
       "       [2.76332331],\n",
       "       [2.6973052 ],\n",
       "       [2.6973052 ],\n",
       "       [2.6973052 ],\n",
       "       [2.6973052 ],\n",
       "       [2.6973052 ],\n",
       "       [2.6973052 ],\n",
       "       [2.6973052 ],\n",
       "       [2.6973052 ],\n",
       "       [2.6973052 ],\n",
       "       [2.71616769],\n",
       "       [2.90479016],\n",
       "       [2.90479016],\n",
       "       [3.18772459],\n",
       "       [3.01796412],\n",
       "       [3.01796412],\n",
       "       [3.03682637],\n",
       "       [2.91422129],\n",
       "       [2.91422129],\n",
       "       [2.91422129],\n",
       "       [2.95194602],\n",
       "       [2.92365241],\n",
       "       [2.89535904],\n",
       "       [2.89535904],\n",
       "       [2.89535904],\n",
       "       [2.93308353],\n",
       "       [2.93308353],\n",
       "       [2.87649679],\n",
       "       [2.87649679],\n",
       "       [3.008533  ],\n",
       "       [2.92365241],\n",
       "       [2.92365241],\n",
       "       [2.84820342],\n",
       "       [2.68787408],\n",
       "       [2.62185621],\n",
       "       [2.76332331],\n",
       "       [2.73502994],\n",
       "       [2.73502994],\n",
       "       [2.63128734],\n",
       "       [2.63128734],\n",
       "       [2.63128734],\n",
       "       [2.63128734],\n",
       "       [2.64071846],\n",
       "       [2.78218555],\n",
       "       [2.67844296],\n",
       "       [2.64071846],\n",
       "       [2.65958071],\n",
       "       [2.65958071],\n",
       "       [2.65958071],\n",
       "       [2.64071846],\n",
       "       [2.64071846],\n",
       "       [2.59356284],\n",
       "       [2.67844296],\n",
       "       [2.68787408],\n",
       "       [2.68787408],\n",
       "       [2.51811385],\n",
       "       [2.51811385],\n",
       "       [2.50868273],\n",
       "       [2.37664652],\n",
       "       [2.37664652],\n",
       "       [2.35778427],\n",
       "       [2.29176641],\n",
       "       [2.2257483 ],\n",
       "       [2.0654192 ],\n",
       "       [2.0276947 ],\n",
       "       [2.0276947 ],\n",
       "       [2.04655695],\n",
       "       [1.9711076 ],\n",
       "       [1.9711076 ],\n",
       "       [1.74476039],\n",
       "       [1.73532927],\n",
       "       [1.75419164],\n",
       "       [1.48068857],\n",
       "       [1.52784431],\n",
       "       [1.18832326],\n",
       "       [1.48068857],\n",
       "       [1.41467059],\n",
       "       [1.27320361],\n",
       "       [1.36751497],\n",
       "       [1.14116764],\n",
       "       [1.14116764],\n",
       "       [1.57499993],\n",
       "       [1.59000003],\n",
       "       [1.5       ],\n",
       "       [1.40999997],\n",
       "       [1.40999997],\n",
       "       [1.27999997],\n",
       "       [1.27999997],\n",
       "       [1.27999997],\n",
       "       [1.30999994],\n",
       "       [1.30999994],\n",
       "       [1.44000006],\n",
       "       [1.54999995],\n",
       "       [1.51999998],\n",
       "       [1.45000005],\n",
       "       [1.32000005],\n",
       "       [1.33000004],\n",
       "       [1.35000002],\n",
       "       [1.33000004],\n",
       "       [1.23000002],\n",
       "       [1.25      ],\n",
       "       [1.26999998],\n",
       "       [1.26999998],\n",
       "       [1.24000001],\n",
       "       [1.42999995],\n",
       "       [1.48000002],\n",
       "       [1.32000005],\n",
       "       [1.44000006],\n",
       "       [1.32000005],\n",
       "       [1.32000005],\n",
       "       [1.34000003],\n",
       "       [1.34000003],\n",
       "       [1.34000003],\n",
       "       [1.38      ],\n",
       "       [1.30999994],\n",
       "       [1.28999996],\n",
       "       [1.33000004],\n",
       "       [1.29999995],\n",
       "       [1.29999995],\n",
       "       [1.29999995],\n",
       "       [1.29999995],\n",
       "       [1.20000005],\n",
       "       [1.20000005],\n",
       "       [1.20000005],\n",
       "       [1.41999996],\n",
       "       [1.46000004],\n",
       "       [1.46000004],\n",
       "       [1.44000006],\n",
       "       [1.45000005],\n",
       "       [1.45000005],\n",
       "       [1.45000005],\n",
       "       [1.71000004],\n",
       "       [1.83000004],\n",
       "       [1.67999995],\n",
       "       [1.63999999],\n",
       "       [1.5       ],\n",
       "       [1.48000002],\n",
       "       [1.48000002],\n",
       "       [1.48000002],\n",
       "       [1.50999999],\n",
       "       [1.51999998],\n",
       "       [1.50999999],\n",
       "       [1.50999999],\n",
       "       [1.50999999],\n",
       "       [1.50999999],\n",
       "       [1.50999999],\n",
       "       [1.50999999],\n",
       "       [1.50999999],\n",
       "       [1.47000003],\n",
       "       [1.47000003],\n",
       "       [1.55999994],\n",
       "       [1.53999996],\n",
       "       [1.50999999],\n",
       "       [1.50999999],\n",
       "       [1.50999999],\n",
       "       [1.50999999],\n",
       "       [1.50999999],\n",
       "       [1.50999999],\n",
       "       [1.53999996],\n",
       "       [1.53999996],\n",
       "       [1.53999996],\n",
       "       [1.50999999],\n",
       "       [1.50999999],\n",
       "       [1.53999996],\n",
       "       [1.53999996],\n",
       "       [1.54999995],\n",
       "       [1.54999995],\n",
       "       [1.41999996],\n",
       "       [1.41999996],\n",
       "       [1.41999996],\n",
       "       [1.41999996],\n",
       "       [1.38      ],\n",
       "       [1.38      ],\n",
       "       [1.38      ],\n",
       "       [1.38      ],\n",
       "       [1.38      ],\n",
       "       [1.38      ],\n",
       "       [1.54999995],\n",
       "       [1.54999995],\n",
       "       [1.45000005],\n",
       "       [1.41999996],\n",
       "       [1.50999999],\n",
       "       [1.39999998],\n",
       "       [1.46000004],\n",
       "       [1.47000003],\n",
       "       [1.47000003],\n",
       "       [1.45000005],\n",
       "       [1.40999997],\n",
       "       [1.40999997],\n",
       "       [1.40999997],\n",
       "       [1.40999997],\n",
       "       [1.40999997],\n",
       "       [1.44000006],\n",
       "       [1.44000006],\n",
       "       [1.44000006],\n",
       "       [1.41999996],\n",
       "       [1.28999996],\n",
       "       [1.30999994],\n",
       "       [1.30999994],\n",
       "       [1.30999994],\n",
       "       [1.34000003],\n",
       "       [1.30999994],\n",
       "       [1.30999994],\n",
       "       [1.30999994],\n",
       "       [1.25      ],\n",
       "       [1.20000005],\n",
       "       [1.20000005],\n",
       "       [1.20000005],\n",
       "       [1.25999999],\n",
       "       [1.25999999],\n",
       "       [1.25999999],\n",
       "       [1.25999999],\n",
       "       [1.25999999],\n",
       "       [1.36000001],\n",
       "       [1.36000001],\n",
       "       [1.36000001],\n",
       "       [1.40999997],\n",
       "       [1.40999997],\n",
       "       [1.46000004],\n",
       "       [1.46000004],\n",
       "       [1.46000004],\n",
       "       [1.39999998],\n",
       "       [1.39999998],\n",
       "       [1.39999998],\n",
       "       [1.46000004],\n",
       "       [1.46000004],\n",
       "       [1.47000003],\n",
       "       [1.50999999],\n",
       "       [1.50999999],\n",
       "       [1.60000002],\n",
       "       [1.60000002],\n",
       "       [1.60000002],\n",
       "       [1.57000005],\n",
       "       [1.50999999],\n",
       "       [1.60000002],\n",
       "       [1.60000002],\n",
       "       [1.57000005],\n",
       "       [1.64999998],\n",
       "       [1.64999998],\n",
       "       [1.64999998],\n",
       "       [1.80999994],\n",
       "       [1.87      ],\n",
       "       [1.88999999],\n",
       "       [1.88999999],\n",
       "       [1.94000006],\n",
       "       [1.91999996],\n",
       "       [1.98000002],\n",
       "       [2.00999999],\n",
       "       [2.00999999],\n",
       "       [2.00999999],\n",
       "       [2.1500001 ],\n",
       "       [2.1500001 ],\n",
       "       [2.08999991],\n",
       "       [2.08999991],\n",
       "       [2.08999991],\n",
       "       [2.19000006],\n",
       "       [2.19000006],\n",
       "       [2.28999996],\n",
       "       [2.22000003],\n",
       "       [2.19000006],\n",
       "       [2.19000006],\n",
       "       [2.24000001],\n",
       "       [2.1500001 ],\n",
       "       [2.1500001 ],\n",
       "       [2.13000011],\n",
       "       [2.16000009],\n",
       "       [2.19000006],\n",
       "       [2.20000005],\n",
       "       [2.1099999 ],\n",
       "       [1.96000004],\n",
       "       [1.96000004],\n",
       "       [2.28999996],\n",
       "       [2.21000004],\n",
       "       [2.13000011],\n",
       "       [2.22000003],\n",
       "       [2.25999999],\n",
       "       [2.28999996],\n",
       "       [2.1500001 ],\n",
       "       [2.13750005]])"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "'This is scaled: '"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "array([[0.03833334],\n",
       "       [0.04833334],\n",
       "       [0.05500001],\n",
       "       ...,\n",
       "       [0.39530888],\n",
       "       [0.36849235],\n",
       "       [0.366098  ]])"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "'x_train: '"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "array([[0.03833334, 0.04833334, 0.05500001, ..., 0.06833334, 0.07      ,\n",
       "        0.06166667],\n",
       "       [0.04833334, 0.05500001, 0.05500001, ..., 0.07      , 0.06166667,\n",
       "        0.06333332],\n",
       "       [0.05500001, 0.05500001, 0.04833334, ..., 0.06166667, 0.06333332,\n",
       "        0.06666669],\n",
       "       ...,\n",
       "       [0.52333334, 0.52500001, 0.52500001, ..., 0.48109362, 0.48613622,\n",
       "        0.49454052],\n",
       "       [0.52500001, 0.52500001, 0.52500001, ..., 0.48613622, 0.49454052,\n",
       "        0.49454052],\n",
       "       [0.52500001, 0.52500001, 0.5016667 , ..., 0.49454052, 0.49454052,\n",
       "        0.53151935]])"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "'y_train: '"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "array([0.06333332, 0.06666669, 0.06666669, ..., 0.49454052, 0.53151935,\n",
       "       0.51302989])"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "'x_train reshaped: '"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "array([[[0.03833334],\n",
       "        [0.04833334],\n",
       "        [0.05500001],\n",
       "        ...,\n",
       "        [0.06833334],\n",
       "        [0.07      ],\n",
       "        [0.06166667]],\n",
       "\n",
       "       [[0.04833334],\n",
       "        [0.05500001],\n",
       "        [0.05500001],\n",
       "        ...,\n",
       "        [0.07      ],\n",
       "        [0.06166667],\n",
       "        [0.06333332]],\n",
       "\n",
       "       [[0.05500001],\n",
       "        [0.05500001],\n",
       "        [0.04833334],\n",
       "        ...,\n",
       "        [0.06166667],\n",
       "        [0.06333332],\n",
       "        [0.06666669]],\n",
       "\n",
       "       ...,\n",
       "\n",
       "       [[0.52333334],\n",
       "        [0.52500001],\n",
       "        [0.52500001],\n",
       "        ...,\n",
       "        [0.48109362],\n",
       "        [0.48613622],\n",
       "        [0.49454052]],\n",
       "\n",
       "       [[0.52500001],\n",
       "        [0.52500001],\n",
       "        [0.52500001],\n",
       "        ...,\n",
       "        [0.48613622],\n",
       "        [0.49454052],\n",
       "        [0.49454052]],\n",
       "\n",
       "       [[0.52500001],\n",
       "        [0.52500001],\n",
       "        [0.5016667 ],\n",
       "        ...,\n",
       "        [0.49454052],\n",
       "        [0.49454052],\n",
       "        [0.53151935]]])"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/1\n",
      " - 648s - loss: 0.0026\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "'This is closing price: '"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "array([[2.9570932],\n",
       "       [2.98586  ],\n",
       "       [3.0046563],\n",
       "       [2.9992425],\n",
       "       [2.98431  ],\n",
       "       [2.9675734],\n",
       "       [2.9531186],\n",
       "       [2.9425597],\n",
       "       [2.9360209],\n",
       "       [2.913753 ],\n",
       "       [2.9018238],\n",
       "       [2.901632 ],\n",
       "       [2.8827338],\n",
       "       [2.860277 ],\n",
       "       [2.8507307],\n",
       "       [2.8485332],\n",
       "       [2.8383174],\n",
       "       [2.8270273],\n",
       "       [2.8173108],\n",
       "       [2.810111 ],\n",
       "       [2.791694 ],\n",
       "       [2.772138 ],\n",
       "       [2.7555275],\n",
       "       [2.7432783],\n",
       "       [2.7165933],\n",
       "       [2.6856337],\n",
       "       [2.678653 ],\n",
       "       [2.661112 ],\n",
       "       [2.6751513],\n",
       "       [2.6998127],\n",
       "       [2.7336152],\n",
       "       [2.7547429],\n",
       "       [2.766354 ],\n",
       "       [2.7916086],\n",
       "       [2.8171978],\n",
       "       [2.8345308],\n",
       "       [2.844693 ],\n",
       "       [2.8493273],\n",
       "       [2.8554811],\n",
       "       [2.8108063],\n",
       "       [2.750199 ],\n",
       "       [2.6664207],\n",
       "       [2.5855203],\n",
       "       [2.5209956],\n",
       "       [2.4761224],\n",
       "       [2.4655058],\n",
       "       [2.4693944],\n",
       "       [2.4801242],\n",
       "       [2.492422 ],\n",
       "       [2.4883387],\n",
       "       [2.5076902],\n",
       "       [2.5329351],\n",
       "       [2.5177884],\n",
       "       [2.4878619],\n",
       "       [2.4557874],\n",
       "       [2.3952267],\n",
       "       [2.3563027],\n",
       "       [2.3331375],\n",
       "       [2.3215866],\n",
       "       [2.3176713],\n",
       "       [2.3197608],\n",
       "       [2.3193617],\n",
       "       [2.3261654],\n",
       "       [2.3264983],\n",
       "       [2.3239105],\n",
       "       [2.3299658],\n",
       "       [2.3236716],\n",
       "       [2.3261993],\n",
       "       [2.3447628],\n",
       "       [2.3669624],\n",
       "       [2.3868558],\n",
       "       [2.4151974],\n",
       "       [2.4417024],\n",
       "       [2.462433 ],\n",
       "       [2.4765077],\n",
       "       [2.4847038],\n",
       "       [2.4884853],\n",
       "       [2.4893992],\n",
       "       [2.488761 ],\n",
       "       [2.4875367],\n",
       "       [2.5416963],\n",
       "       [2.6100466],\n",
       "       [2.6731403],\n",
       "       [2.7222931],\n",
       "       [2.7746804],\n",
       "       [2.8177369],\n",
       "       [2.8482573],\n",
       "       [2.8600738],\n",
       "       [2.8611827],\n",
       "       [2.8448956],\n",
       "       [2.836405 ],\n",
       "       [2.8326502],\n",
       "       [2.8322177],\n",
       "       [2.8338857],\n",
       "       [2.8366995],\n",
       "       [2.8399749],\n",
       "       [2.8311827],\n",
       "       [2.800509 ],\n",
       "       [2.766608 ],\n",
       "       [2.7359102],\n",
       "       [2.7484782],\n",
       "       [2.7792585],\n",
       "       [2.8133836],\n",
       "       [2.8430524],\n",
       "       [2.8651633],\n",
       "       [2.879487 ],\n",
       "       [2.8872745],\n",
       "       [2.946171 ],\n",
       "       [3.0008726],\n",
       "       [3.0441875],\n",
       "       [3.0702167],\n",
       "       [3.063669 ],\n",
       "       [3.0440662],\n",
       "       [3.0218315],\n",
       "       [2.9955096],\n",
       "       [2.9728127],\n",
       "       [2.956325 ],\n",
       "       [2.9461956],\n",
       "       [2.9675362],\n",
       "       [2.99859  ],\n",
       "       [3.0624623],\n",
       "       [3.1246207],\n",
       "       [3.1746426],\n",
       "       [3.2231114],\n",
       "       [3.1926897],\n",
       "       [3.1356127],\n",
       "       [3.076575 ],\n",
       "       [3.0276177],\n",
       "       [2.9926991],\n",
       "       [2.9534805],\n",
       "       [2.92116  ],\n",
       "       [2.8984869],\n",
       "       [2.9256682],\n",
       "       [2.9533653],\n",
       "       [2.9775598],\n",
       "       [3.0028331],\n",
       "       [3.0269408],\n",
       "       [3.0347638],\n",
       "       [3.059013 ],\n",
       "       [3.084529 ],\n",
       "       [3.101967 ],\n",
       "       [3.1122692],\n",
       "       [3.1115563],\n",
       "       [3.1059322],\n",
       "       [3.109756 ],\n",
       "       [3.091221 ],\n",
       "       [3.0674298],\n",
       "       [3.0456793],\n",
       "       [3.0165708],\n",
       "       [2.9904861],\n",
       "       [2.9566894],\n",
       "       [2.9267325],\n",
       "       [2.9043527],\n",
       "       [2.8899157],\n",
       "       [2.8715436],\n",
       "       [2.8555226],\n",
       "       [2.843621 ],\n",
       "       [2.8253548],\n",
       "       [2.808046 ],\n",
       "       [2.794255 ],\n",
       "       [2.7793005],\n",
       "       [2.7614908],\n",
       "       [2.7648983],\n",
       "       [2.753785 ],\n",
       "       [2.7061465],\n",
       "       [2.6930964],\n",
       "       [2.6581416],\n",
       "       [2.6162016],\n",
       "       [2.5786686],\n",
       "       [2.5498624],\n",
       "       [2.540518 ],\n",
       "       [2.5415437],\n",
       "       [2.5473316],\n",
       "       [2.5542736],\n",
       "       [2.5603547],\n",
       "       [2.537399 ],\n",
       "       [2.5060108],\n",
       "       [2.475897 ],\n",
       "       [2.4515135],\n",
       "       [2.4390929],\n",
       "       [2.4460454],\n",
       "       [2.4603693],\n",
       "       [2.4756298],\n",
       "       [2.4884963],\n",
       "       [2.497733 ],\n",
       "       [2.5033574],\n",
       "       [2.5145404],\n",
       "       [2.5256972],\n",
       "       [2.53466  ],\n",
       "       [2.540796 ],\n",
       "       [2.544332 ],\n",
       "       [2.5458748],\n",
       "       [2.5461087],\n",
       "       [2.5439231],\n",
       "       [2.565081 ],\n",
       "       [2.5785308],\n",
       "       [2.5867236],\n",
       "       [2.5909405],\n",
       "       [2.5925038],\n",
       "       [2.601145 ],\n",
       "       [2.6111484],\n",
       "       [2.6287012],\n",
       "       [2.64625  ],\n",
       "       [2.6485405],\n",
       "       [2.6438806],\n",
       "       [2.6419392],\n",
       "       [2.6241133],\n",
       "       [2.603063 ],\n",
       "       [2.5963786],\n",
       "       [2.5971816],\n",
       "       [2.6016037],\n",
       "       [2.6019616],\n",
       "       [2.5835752],\n",
       "       [2.560655 ],\n",
       "       [2.5397234],\n",
       "       [2.5235448],\n",
       "       [2.4821029],\n",
       "       [2.4378974],\n",
       "       [2.3835611],\n",
       "       [2.3350403],\n",
       "       [2.297911 ],\n",
       "       [2.2728508],\n",
       "       [2.2580702],\n",
       "       [2.2508812],\n",
       "       [2.2485998],\n",
       "       [2.2092206],\n",
       "       [2.1608143],\n",
       "       [2.141847 ],\n",
       "       [2.1388786],\n",
       "       [2.1440208],\n",
       "       [2.1399832],\n",
       "       [2.1514678],\n",
       "       [2.1672966],\n",
       "       [2.182205 ],\n",
       "       [2.1747239],\n",
       "       [2.158355 ],\n",
       "       [2.1402223],\n",
       "       [2.1189816],\n",
       "       [2.0999951],\n",
       "       [2.0852592],\n",
       "       [2.0750563],\n",
       "       [2.0687757],\n",
       "       [2.0654607],\n",
       "       [2.1070418],\n",
       "       [2.1614056],\n",
       "       [2.2125654],\n",
       "       [2.2689044],\n",
       "       [2.3257177],\n",
       "       [2.371991 ],\n",
       "       [2.404613 ],\n",
       "       [2.4245071],\n",
       "       [2.434455 ],\n",
       "       [2.4376779],\n",
       "       [2.437046 ],\n",
       "       [2.4347446],\n",
       "       [2.4322233],\n",
       "       [2.4427977],\n",
       "       [2.4395192],\n",
       "       [2.4315271],\n",
       "       [2.4230094],\n",
       "       [2.4160635],\n",
       "       [2.4078612],\n",
       "       [2.4009998],\n",
       "       [2.3962595],\n",
       "       [2.3918386],\n",
       "       [2.454621 ],\n",
       "       [2.4959047],\n",
       "       [2.5779366],\n",
       "       [2.661926 ],\n",
       "       [2.7315223],\n",
       "       [2.7923334],\n",
       "       [2.8535466],\n",
       "       [2.9173186],\n",
       "       [2.9276319],\n",
       "       [2.91309  ],\n",
       "       [2.8893507],\n",
       "       [2.8471189],\n",
       "       [2.8054938],\n",
       "       [2.7575574],\n",
       "       [2.7169712],\n",
       "       [2.675187 ],\n",
       "       [2.6419141],\n",
       "       [2.6193442],\n",
       "       [2.6119509],\n",
       "       [2.6042962],\n",
       "       [2.5988147],\n",
       "       [2.6100261],\n",
       "       [2.6264906],\n",
       "       [2.6425223],\n",
       "       [2.655336 ],\n",
       "       [2.680496 ],\n",
       "       [2.7186377],\n",
       "       [2.7311227],\n",
       "       [2.7302027],\n",
       "       [2.7226992],\n",
       "       [2.7314746],\n",
       "       [2.7451053],\n",
       "       [2.7714033],\n",
       "       [2.7851593],\n",
       "       [2.7911828],\n",
       "       [2.7923663],\n",
       "       [2.7910023],\n",
       "       [2.788691 ],\n",
       "       [2.7864122],\n",
       "       [2.7846658],\n",
       "       [2.7836177],\n",
       "       [2.7832355],\n",
       "       [2.7870755],\n",
       "       [2.829214 ],\n",
       "       [2.8798583],\n",
       "       [2.9821098],\n",
       "       [3.0523925],\n",
       "       [3.096326 ],\n",
       "       [3.1229591],\n",
       "       [3.1108723],\n",
       "       [3.0842566],\n",
       "       [3.055655 ],\n",
       "       [3.039095 ],\n",
       "       [3.0253723],\n",
       "       [3.0106883],\n",
       "       [2.9991343],\n",
       "       [2.9916751],\n",
       "       [2.9955142],\n",
       "       [3.003904 ],\n",
       "       [3.0019464],\n",
       "       [2.9964628],\n",
       "       [3.0168476],\n",
       "       [3.027081 ],\n",
       "       [3.031819 ],\n",
       "       [3.0179682],\n",
       "       [2.9670446],\n",
       "       [2.8973007],\n",
       "       [2.860083 ],\n",
       "       [2.8377457],\n",
       "       [2.8271399],\n",
       "       [2.804024 ],\n",
       "       [2.7806604],\n",
       "       [2.7614942],\n",
       "       [2.7478256],\n",
       "       [2.7410657],\n",
       "       [2.7661777],\n",
       "       [2.7799504],\n",
       "       [2.779546 ],\n",
       "       [2.7763166],\n",
       "       [2.771776 ],\n",
       "       [2.7671356],\n",
       "       [2.7593515],\n",
       "       [2.75149  ],\n",
       "       [2.735673 ],\n",
       "       [2.7358534],\n",
       "       [2.7443428],\n",
       "       [2.7550988],\n",
       "       [2.7319036],\n",
       "       [2.6988053],\n",
       "       [2.6650903],\n",
       "       [2.611988 ],\n",
       "       [2.5608647],\n",
       "       [2.5163352],\n",
       "       [2.4708073],\n",
       "       [2.4214356],\n",
       "       [2.3501155],\n",
       "       [2.2758107],\n",
       "       [2.2134874],\n",
       "       [2.1711624],\n",
       "       [2.1319845],\n",
       "       [2.101756 ],\n",
       "       [2.0404437],\n",
       "       [1.974868 ],\n",
       "       [1.9215093],\n",
       "       [1.8349825],\n",
       "       [1.7571088],\n",
       "       [1.638177 ],\n",
       "       [1.5702862],\n",
       "       [1.5250485],\n",
       "       [1.4748449],\n",
       "       [1.4465518],\n",
       "       [1.3952897],\n",
       "       [1.3419014],\n",
       "       [1.3670222],\n",
       "       [1.4274626],\n",
       "       [1.4800369],\n",
       "       [1.5046415],\n",
       "       [1.511143 ],\n",
       "       [1.4849739],\n",
       "       [1.4472369],\n",
       "       [1.4095029],\n",
       "       [1.3825241],\n",
       "       [1.3647743],\n",
       "       [1.3759419],\n",
       "       [1.4173722],\n",
       "       [1.4613873],\n",
       "       [1.4875768],\n",
       "       [1.4788   ],\n",
       "       [1.456575 ],\n",
       "       [1.4345727],\n",
       "       [1.4127272],\n",
       "       [1.3779333],\n",
       "       [1.3463713],\n",
       "       [1.3247893],\n",
       "       [1.3116004],\n",
       "       [1.2998228],\n",
       "       [1.3223436],\n",
       "       [1.3658371],\n",
       "       [1.3855948],\n",
       "       [1.4112638],\n",
       "       [1.4147109],\n",
       "       [1.4071254],\n",
       "       [1.3985614],\n",
       "       [1.3906947],\n",
       "       [1.3843828],\n",
       "       [1.3865278],\n",
       "       [1.3805592],\n",
       "       [1.3686128],\n",
       "       [1.3624686],\n",
       "       [1.3550117],\n",
       "       [1.3483151],\n",
       "       [1.343122 ],\n",
       "       [1.33955  ],\n",
       "       [1.3208026],\n",
       "       [1.2981633],\n",
       "       [1.2772976],\n",
       "       [1.2970184],\n",
       "       [1.3394626],\n",
       "       [1.3861921],\n",
       "       [1.4239985],\n",
       "       [1.4528532],\n",
       "       [1.4723153],\n",
       "       [1.4837592],\n",
       "       [1.5337026],\n",
       "       [1.6138524],\n",
       "       [1.6686164],\n",
       "       [1.6954443],\n",
       "       [1.6797687],\n",
       "       [1.6435211],\n",
       "       [1.6035602],\n",
       "       [1.5686233],\n",
       "       [1.5473117],\n",
       "       [1.5380317],\n",
       "       [1.5347757],\n",
       "       [1.5354204],\n",
       "       [1.538175 ],\n",
       "       [1.5417507],\n",
       "       [1.5453148],\n",
       "       [1.5483999],\n",
       "       [1.5508049],\n",
       "       [1.5456778],\n",
       "       [1.5379444],\n",
       "       [1.5455396],\n",
       "       [1.5554502],\n",
       "       [1.5598227],\n",
       "       [1.5608928],\n",
       "       [1.5601165],\n",
       "       [1.5585164],\n",
       "       [1.5567386],\n",
       "       [1.5551407],\n",
       "       [1.5590085],\n",
       "       [1.5647326],\n",
       "       [1.5704174],\n",
       "       [1.5699946],\n",
       "       [1.5668207],\n",
       "       [1.5679499],\n",
       "       [1.5708202],\n",
       "       [1.5757911],\n",
       "       [1.5809162],\n",
       "       [1.5630244],\n",
       "       [1.5376798],\n",
       "       [1.5129046],\n",
       "       [1.4925346],\n",
       "       [1.4709916],\n",
       "       [1.4527196],\n",
       "       [1.4391187],\n",
       "       [1.430101 ],\n",
       "       [1.4248548],\n",
       "       [1.4223391],\n",
       "       [1.4502103],\n",
       "       [1.4876771],\n",
       "       [1.506619 ],\n",
       "       [1.5086113],\n",
       "       [1.5172453],\n",
       "       [1.5083104],\n",
       "       [1.5029169],\n",
       "       [1.5013909],\n",
       "       [1.5018952],\n",
       "       [1.499887 ],\n",
       "       [1.4903032],\n",
       "       [1.4788274],\n",
       "       [1.4683387],\n",
       "       [1.4601008],\n",
       "       [1.4543735],\n",
       "       [1.4559354],\n",
       "       [1.460714 ],\n",
       "       [1.4663279],\n",
       "       [1.4680622],\n",
       "       [1.4458011],\n",
       "       [1.4195215],\n",
       "       [1.395453 ],\n",
       "       [1.3764057],\n",
       "       [1.3679487],\n",
       "       [1.3609653],\n",
       "       [1.3560195],\n",
       "       [1.3528851],\n",
       "       [1.341167 ],\n",
       "       [1.3191177],\n",
       "       [1.2957673],\n",
       "       [1.2755033],\n",
       "       [1.2698456],\n",
       "       [1.272005 ],\n",
       "       [1.277636 ],\n",
       "       [1.2840067],\n",
       "       [1.2896202],\n",
       "       [1.31042  ],\n",
       "       [1.3348138],\n",
       "       [1.3568898],\n",
       "       [1.3824577],\n",
       "       [1.4051768],\n",
       "       [1.4310608],\n",
       "       [1.4538612],\n",
       "       [1.4712629],\n",
       "       [1.4728438],\n",
       "       [1.466671 ],\n",
       "       [1.4576995],\n",
       "       [1.45902  ],\n",
       "       [1.4649392],\n",
       "       [1.4739674],\n",
       "       [1.4899174],\n",
       "       [1.506556 ],\n",
       "       [1.5363033],\n",
       "       [1.5671859],\n",
       "       [1.593572 ],\n",
       "       [1.6082023],\n",
       "       [1.6044774],\n",
       "       [1.6082952],\n",
       "       [1.6146469],\n",
       "       [1.6160827],\n",
       "       [1.6289845],\n",
       "       [1.6449705],\n",
       "       [1.6599246],\n",
       "       [1.6999068],\n",
       "       [1.7551829],\n",
       "       [1.8119462],\n",
       "       [1.859711 ],\n",
       "       [1.9038578],\n",
       "       [1.9346344],\n",
       "       [1.9645203],\n",
       "       [1.9937524],\n",
       "       [2.0173955],\n",
       "       [2.0342984],\n",
       "       [2.0706737],\n",
       "       [2.1092153],\n",
       "       [2.1312695],\n",
       "       [2.1422236],\n",
       "       [2.1461024],\n",
       "       [2.1645257],\n",
       "       [2.1861422],\n",
       "       [2.2243907],\n",
       "       [2.2503436],\n",
       "       [2.2611327],\n",
       "       [2.2632167],\n",
       "       [2.270241 ],\n",
       "       [2.261416 ],\n",
       "       [2.2476492],\n",
       "       [2.2304773],\n",
       "       [2.2206717],\n",
       "       [2.221663 ],\n",
       "       [2.2295554],\n",
       "       [2.2229655],\n",
       "       [2.1841264],\n",
       "       [2.13822  ],\n",
       "       [2.1571543],\n",
       "       [2.186821 ],\n",
       "       [2.2027507],\n",
       "       [2.2266815],\n",
       "       [2.2568836],\n",
       "       [2.2899902],\n",
       "       [2.292162 ]], dtype=float32)"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.13140250718243074\n",
      "(575, 1)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/giorgiobiasuzzi/opt/anaconda3/envs/MLEnvCapstone/lib/python3.7/site-packages/ipykernel_launcher.py:115: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1a5f8af2d0>,\n",
       " <matplotlib.lines.Line2D at 0x1a5f8afb50>]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import pandas_datareader.data as web\n",
    "import numpy as np\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "from keras.models import Sequential\n",
    "from keras.layers import Dense, Dropout, LSTM\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib import rcParams\n",
    "import datetime as dt\n",
    "\n",
    "#Data Collection#\n",
    "stocks = ['RBSPF']\n",
    "\n",
    "start = dt.datetime(2010, 1, 1)\n",
    "end = dt.datetime(2030, 1, 27)\n",
    "\n",
    "data = web.DataReader('RBSPF', 'yahoo', start, end)\n",
    "\n",
    "#Data pre-processing#\n",
    "\n",
    "dates =[]\n",
    "for x in range(len(data)):\n",
    "    '''Remove the level index caused by the multiple layers in the original dataset'''\n",
    "    newdate = str(data.index[x])\n",
    "    newdate = newdate[0:10]\n",
    "    dates.append(newdate)\n",
    "\n",
    "data['Dates'] = dates\n",
    "data['Dates'] = pd.to_datetime(data[\"Dates\"])\n",
    "data.reset_index(drop=True, inplace=True)\n",
    "#data['Dates'] = (data['Dates'] - data['Dates'].min()) / np.timedelta64(1,'D')\n",
    "data = data.drop(data.columns[[0, 1, 2, 3, 4]], axis=1)\n",
    "data = data[['Dates', 'Adj Close']]\n",
    "display(data)\n",
    "\n",
    "for i in range(0,len(data)):\n",
    "    data['Dates'][i] = data['Dates'][i]\n",
    "    data['Adj Close'][i] = data['Adj Close'][i]\n",
    "\n",
    "#Setting Index\n",
    "data.index = data.Dates\n",
    "data.drop('Dates', axis=1, inplace=True)\n",
    "\n",
    "\n",
    "#Creating train and test sets\n",
    "dataset = data.values\n",
    "display(dataset)\n",
    "print(dataset.shape)\n",
    "\n",
    "train = dataset[0:2196,:]\n",
    "valid = dataset[2196:,:]\n",
    "display(train)\n",
    "display(valid)\n",
    "\n",
    "#Converting dataset into x_train and y_train\n",
    "scaler = MinMaxScaler(feature_range=(0, 1))\n",
    "scaled_Data = scaler.fit_transform(dataset)\n",
    "display('This is scaled: ', scaled_Data)\n",
    "\n",
    "\n",
    "x_train, y_train = [], []\n",
    "for i in range(60,len(train)):\n",
    "    x_train.append(scaled_Data[i-60:i,0])\n",
    "    y_train.append(scaled_Data[i,0])\n",
    "x_train, y_train = np.array(x_train), np.array(y_train)\n",
    "\n",
    "display('x_train: ', x_train)\n",
    "display('y_train: ', y_train)\n",
    "\n",
    "x_train = np.reshape(x_train, (x_train.shape[0],x_train.shape[1],1))\n",
    "display('x_train reshaped: ', x_train)\n",
    "\n",
    "# create and fit the LSTM network\n",
    "model = Sequential()\n",
    "model.add(LSTM(units=50, return_sequences=True, input_shape=(x_train.shape[1],1)))\n",
    "model.add(LSTM(units=50))\n",
    "model.add(Dense(1))\n",
    "\n",
    "model.compile(loss='mean_squared_error', optimizer='adam')\n",
    "model.fit(x_train, y_train, epochs=1, batch_size=1, verbose=2)\n",
    "\n",
    "\n",
    "#predicting 246 values, using past 60 from the train data\n",
    "inputs = data[len(data) - len(valid) - 60:].values\n",
    "inputs = inputs.reshape(-1,1)\n",
    "inputs  = scaler.transform(inputs)\n",
    "\n",
    "X_test = []\n",
    "for i in range(60,inputs.shape[0]):\n",
    "    X_test.append(inputs[i-60:i,0])\n",
    "X_test = np.array(X_test)\n",
    "\n",
    "X_test = np.reshape(X_test, (X_test.shape[0],X_test.shape[1],1))\n",
    "closing_price = model.predict(X_test)\n",
    "closing_price = scaler.inverse_transform(closing_price)\n",
    "\n",
    "display('This is closing price: ', closing_price)\n",
    "\n",
    "rms=np.sqrt(np.mean(np.power((valid-closing_price),2)))\n",
    "print(rms)\n",
    "\n",
    "\n",
    "dfClosing_Price = pd.DataFrame(closing_price, columns=[\"Predictions\"])\n",
    "\n",
    "#for plotting\n",
    "train = data[:2196]\n",
    "valid = data[2196:]\n",
    "print(closing_price.shape)\n",
    "\n",
    "valid['Predictions'] = closing_price\n",
    "plt.plot(train['Adj Close'])\n",
    "plt.plot(valid[['Adj Close','Predictions']])"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
